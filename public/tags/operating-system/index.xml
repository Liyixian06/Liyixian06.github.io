<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Operating System on Liyixian Blog</title>
    <link>http://localhost:1313/tags/operating-system/</link>
    <description>Recent content in Operating System on Liyixian Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>© LiYixian 2023</copyright>
    <lastBuildDate>Mon, 20 Nov 2023 01:13:10 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/operating-system/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>操作系统笔记05：设备管理</title>
      <link>http://localhost:1313/2023/11/operating-system-7.0/</link>
      <pubDate>Mon, 20 Nov 2023 01:13:10 +0800</pubDate>
      <guid>http://localhost:1313/2023/11/operating-system-7.0/</guid>
      <description>&lt;p&gt;设备（&lt;em&gt;e.g.鼠标、键盘、显示器&lt;/em&gt;）的特点：速度慢、难以共享、工作逻辑 varies&lt;br&gt;&#xA;操作系统的设备管理使得应用程序不需要关心设备的细节，就可以统一响应&lt;/p&gt;&#xA;&lt;p&gt;外设借助一个 controller/adapter 和计算机连接在一起&lt;br&gt;&#xA;适配器采集设备上操作系统关心的数据，有三类接口：数据、命令、状态&lt;br&gt;&#xA;操作系统整理每个厂商提交的设备不同的数据、命令、状态格式，经过封装和抽象，抹去硬件的差异，交给上层应用程序&lt;br&gt;&#xA;设备驱动程序 device driver 负责识别 controller 的数据，完成翻译；现代操作系统已经预先继承了若干个通用的 driver&lt;/p&gt;</description>
    </item>
    <item>
      <title>操作系统笔记04：文件管理</title>
      <link>http://localhost:1313/2023/11/operating-system-6.0/</link>
      <pubDate>Mon, 13 Nov 2023 23:05:15 +0800</pubDate>
      <guid>http://localhost:1313/2023/11/operating-system-6.0/</guid>
      <description>&lt;p&gt;硬盘的物理结构：若干个磁道和扇区&lt;br&gt;&#xA;文件系统：把一段长度可变的连续数据放到磁盘上，而且能通过文件夹/文件的名字实现内容检索&lt;/p&gt;&#xA;&lt;h3 id=&#34;文件系统&#34;&gt;文件系统&lt;/h3&gt;&#xA;&lt;p&gt;如何找到数据在磁盘中的位置？&lt;/p&gt;</description>
    </item>
    <item>
      <title>操作系统笔记03：进程间通信</title>
      <link>http://localhost:1313/2023/10/operating-system-5.0/</link>
      <pubDate>Mon, 30 Oct 2023 23:04:16 +0800</pubDate>
      <guid>http://localhost:1313/2023/10/operating-system-5.0/</guid>
      <description>&lt;p&gt;IPC (Inter Process Communication) 的同步问题 &lt;em&gt;e.g. 买面包&lt;/em&gt;&lt;br&gt;&#xA;（这里只考虑单处理器，不考虑多核）&lt;br&gt;&#xA;临界区 critical section：空闲则入、忙则等待、有限等待、让权等待（optional）&lt;/p&gt;</description>
    </item>
    <item>
      <title>操作系统笔记02：内存管理</title>
      <link>http://localhost:1313/2023/10/operating-system-4.0/</link>
      <pubDate>Mon, 09 Oct 2023 22:18:13 +0800</pubDate>
      <guid>http://localhost:1313/2023/10/operating-system-4.0/</guid>
      <description>&lt;p&gt;为什么要做内存管理？&lt;br&gt;&#xA;内存太多，提高利用率 -&amp;gt; 内存不够，需要闪转腾挪&lt;/p&gt;&#xA;&lt;h3 id=&#34;内存布局和分区分配&#34;&gt;内存布局和分区分配&lt;/h3&gt;&#xA;&lt;p&gt;内存管理的第一个问题是如何在内存区中同时加载多个应用程序&lt;br&gt;&#xA;将内存分区，不同程序加载进不同分区&lt;br&gt;&#xA;-&amp;gt; 指令中的哪些数值是地址？&lt;br&gt;&#xA;编译器在链接时标记了哪些是地址，可以在加载时动态修改&lt;/p&gt;</description>
    </item>
    <item>
      <title>操作系统笔记01：进程管理</title>
      <link>http://localhost:1313/2023/09/operating-system-3.0/</link>
      <pubDate>Mon, 18 Sep 2023 20:24:32 +0800</pubDate>
      <guid>http://localhost:1313/2023/09/operating-system-3.0/</guid>
      <description>&lt;p&gt;计算资源的共享共用：提交给 OS 的任务交替运行&lt;br&gt;&#xA;Cocurrent 并发 &lt;em&gt;VS&lt;/em&gt; Parallel 并行&lt;/p&gt;&#xA;&lt;p&gt;两个问题：如何保存/恢复一个程序的执行过程？如何知道一个程序要触发“慢操作”？&lt;br&gt;&#xA;保存/恢复一个程序的执行过程：处理器的状态来自寄存器，程序的状态来自内存变量；后者不被破坏时，只要保存/恢复程序执行过程的全部寄存器（context）。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
